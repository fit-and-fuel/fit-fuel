@model AdminVM
@{
	Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<style>
	.btn-custom-sm {
		padding: 0.5rem 1rem; /* You can adjust the padding to control the size */
		font-size: 0.875rem; /* You can adjust the font size to your preference */
	}
</style>
<div class="page-titles">
	<ol class="breadcrumb">
		<li><h5 class="bc-title">Dashboard</h5></li>
		<li class="breadcrumb-item">
			<a href="javascript:void(0)">
				<svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path d="M2.125 6.375L8.5 1.41667L14.875 6.375V14.1667C14.875 14.5424 14.7257 14.9027 14.4601 15.1684C14.1944 15.4341 13.8341 15.5833 13.4583 15.5833H3.54167C3.16594 15.5833 2.80561 15.4341 2.53993 15.1684C2.27426 14.9027 2.125 14.5424 2.125 14.1667V6.375Z" stroke="#2C2C2C" stroke-linecap="round" stroke-linejoin="round" />
					<path d="M6.375 15.5833V8.5H10.625V15.5833" stroke="#2C2C2C" stroke-linecap="round" stroke-linejoin="round" />
				</svg>
				Home
			</a>
		</li>
		<li class="breadcrumb-item active"
        ><a href="javascript:void(0)">Dashboard</a>
    </li>
	</ol>
	<a class="text-primary fs-13" data-bs-toggle="offcanvas" href="#offcanvasExample1" role="button" aria-controls="offcanvasExample1">+ Add Task</a>
</div>
<div class="container-fluid">
	<div class="row">
	</div>

</div>



<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<div class="row">
    <div class="col-4">
        <canvas id="myChart" width="50" height="50"></canvas>
    </div>
    <div class="col-1">
        
    </div>
    <div class="col-4">
        <canvas id="myChart1" width="50" height="50"></canvas>
    </div>
    
</div>

<form asp-controller="Admin" asp-action="Role" method="post" class="needs-validation m-5" novalidate>
    <div class="mb-3 w-25">
        <label for="userName" class="form-label">User Name:</label>
        <input type="text" id="userName" name="userName" class="form-control" required>
        <div class="invalid-feedback">
            Please enter a valid user name.
        </div>
    </div>

    <button type="submit" class="btn btn-primary btn-custom-sm">Add Role</button>
</form>
<script>
    // Function to generate random numbers within a range
    function getRandomInt(min, max) {
        return 5;
    }

    // Data for the first chart (myChart1)
    const DATA_COUNT =1;
    const NUMBER_CFG = { count: DATA_COUNT, min: 0, max: 100 };

    const labels = ["Appoitments & DietPlans"];
    const data1 = {
        labels: labels,
        datasets: [
            {
                label: 'Appoitment',
                data: [@Model.NumberOfAppoitment],
                backgroundColor: 'rgba(255, 99, 132, 0.2',
                borderColor: 'rgba(255, 99, 132, 1',
                borderWidth: 1,
            },
            {
                label: 'DietPlans',
                data: [@Model.NumberOfDietPlan],
                backgroundColor: 'rgba(54, 162, 235, 0.2',
                borderColor: 'rgba(54, 162, 235, 1',
                borderWidth: 1,
            },
        ]
    };

    // Data for the second chart (myChart)
    const data2 = {
        labels: [
            'Patients',
            'Nutritionists',
            'Posts'
            
        ],
        datasets: [{
            label: 'You have',
            data: [@Model.NumOfPatient, @Model.NumOfNutritionist, @Model.NumberOfPost],
            backgroundColor: [
                'rgb(243, 170, 96)',
                'rgb(29, 91, 121)',
                'rgb(239, 98, 98)'
               
            ],
            hoverOffset: 4
        }]
    };

    // Create the first chart (myChart1)
    var ctx1 = document.getElementById('myChart1').getContext('2d');
    var myChart1 = new Chart(ctx1, {
        type: 'bar',
        data: data1,
        options: {
            scales: {
                x: {
                    beginAtZero: true,
                },
                y: {
                    beginAtZero: true,
                }
            }
        }
    });

    // Create the second chart (myChart)
    var ctx2 = document.getElementById('myChart').getContext('2d');
    var myChart2 = new Chart(ctx2, {
        type: 'doughnut',
        data: data2,
        options: {
            plugins: {
                legend: {
                    display: true,
                    position: 'top'
                }
            }
        }
    });
</script>
